;; -*- mode: emacs-lisp -*-
;; Time-stamp: <2013-12-30 09:53:56 CST gongzhitaao>

(defconst my-emacs-root
  (expand-file-name "~/Documents/dotemacs/")
  "my emacs load path")

(defconst my-emacs-elc
  (concat my-emacs-root "elc/")
  "Compiled elisp files to speedup init")

;; create this directory is not exist
(unless (file-exists-p my-emacs-elc) (make-directory my-emacs-elc))

;; add link to the uncompiled file to this directory
(let ((confs (directory-files my-emacs-root nil ".*\\.el")))
  (dolist (conf confs)
    (unless (file-exists-p conf)
      (message (expand-file-name conf my-emacs-root))
      (make-symbolic-link (expand-file-name conf my-emacs-root)
			  (expand-file-name conf my-emacs-elc) t))))

;; put all the compiled files in MY-EMACS-ELC folder to keep clean
(defun my-dest-function (filename)
  (concat my-emacs-elc
          (file-name-sans-extension (file-name-nondirectory filename))
          ".elc"))
(setq byte-compile-dest-file-function 'my-dest-function)

(add-to-list 'load-path my-emacs-elc)

(defconst my-emacs-cache
  (concat my-emacs-root "cache/")
  "Emacs cache files")
(unless (file-exists-p my-emacs-cache) (make-directory my-emacs-cache))

(defconst my-emacs-data
  (concat my-emacs-root "emacs.d/")
  "Data files for emacs, like orgmode, diary and etc.")

(load "00basic")
(load "01helper")
(load "02keybinding")

;; load name.conf.el
(let ((files (directory-files my-emacs-root nil ".*\\.conf\\.el")))
  (dolist (file files) (load (file-name-sans-extension file))))

(server-start)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ede-project-directories (quote ("/home/gongzhitaao/Documents/tmp"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
